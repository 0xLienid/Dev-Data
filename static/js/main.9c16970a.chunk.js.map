{"version":3,"sources":["projects.js","helpers/getProjectData.js","helpers/downloadAgg.js","components/DownloadCSV.jsx","components/Chart.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["projects","getProjectData","project","startDate","endDate","a","axios","get","projectData","data","downloads","weeklyFromDaily","dailyData","splice","length","weeklyData","currData","day","i","push","DownloadCSV","onClick","csv","forEach","row","console","log","hiddenElement","document","createElement","href","encodeURI","target","download","click","Chart","useState","setProjectData","useEffect","currentDate","Date","toISOString","slice","Grid","item","s","md","className","ResponsiveContainer","width","height","BarChart","Bar","type","dataKey","stroke","fill","XAxis","tick","YAxis","Tooltip","App","style","backgroundColor","container","spacing","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c16970a.chunk.js","sourcesContent":["export const projects = [\n\t\"ethers\",\n\t\"web3\",\n\t\"web3modal\",\n\t\"@openzeppelin/cli\",\n\t\"ganache-cli\",\n\t\"hardhat\",\n\t\"truffle\",\n\t\"@solana/web3.js\",\n\t\"@project-serum/anchor-cli\",\n\t\"@project-serum/anchor\",\n\t\"stellar-sdk\",\n];","import axios from \"axios\";\n\nexport const getProjectData = async (project, startDate, endDate) => {\n\tconst projectData = await axios.get(`https://api.npmjs.org/downloads/range/${startDate}:${endDate}/${project}`);\n\treturn projectData.data.downloads;\n}","export const weeklyFromDaily = (dailyData) => {\n  dailyData.splice(0, (dailyData.length % 7));\n\tlet weeklyData = [];\n\tlet currData = {\n\t\tdownloads: 0,\n\t\tday: dailyData[0].day,\n\t};\n\tfor (let i = 0; i < dailyData.length; i++) {\n    if (i % 7 == 0) {\n      if (i != 0) {\n        weeklyData.push(currData);\n        currData = {\n          downloads: 0,\n          day: dailyData[i].day,\n        };\n      }\n    }\n    currData.downloads += dailyData[i].downloads;\n\t}\n  weeklyData.push(currData);\n  return weeklyData;\n}","export const DownloadCSV = (data, project) => {\n\tconst downloadCSVClick = () => {\n\t\tvar csv = 'Downloads,Week\\n';\n\t\tdata.data.forEach((row) => {\n\t\t\tcsv += [row.downloads, row.day, ','];\n\t\t\tcsv += \"\\n\";\n\t\t});\n\n    console.log(csv);\n\t\tvar hiddenElement = document.createElement('a');\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n\t\thiddenElement.target = \"_blank\";\n\t\thiddenElement.download = `${data.project}.csv`;\n\t\thiddenElement.click();\n\t}\n\n\treturn (\n\t\t<button onClick={downloadCSVClick}>Download CSV</button>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport \"./chart.css\";\n\nimport { getProjectData } from \"../helpers/getProjectData\";\nimport { weeklyFromDaily } from \"../helpers/downloadAgg\";\nimport { ResponsiveContainer, BarChart, Bar, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { Grid } from \"@material-ui/core\";\nimport { DownloadCSV } from \"./DownloadCSV\";\n\nexport const Chart = (project) => {\n  const [projectData, setProjectData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      let currentDate = new Date().toISOString().slice(0, 10);\n      const data = await getProjectData(project.project, \"2014-01-01\", currentDate);\n      const weeklyData = weeklyFromDaily(data);\n      setProjectData(weeklyData);\n    })()\n  }, []);\n\n  return (\n    <Grid item s={12} md={6}>\n      <div className=\"chart\">\n        <div className=\"chart-head\">\n          <h2 className=\"title\">{project.project}</h2>\n          <DownloadCSV data={projectData} project={project.project} />\n        </div>\n        <ResponsiveContainer width=\"75%\" height={300}>\n          <BarChart\n            data={projectData}\n          >\n            <Bar\n              type=\"monotone\"\n              dataKey=\"downloads\"\n              stroke=\"#C49662\"\n              fill=\"#C49662\"\n            />\n            <XAxis\n              dataKey=\"day\"\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <YAxis\n              tick={{ fill: \"#B6B8C0\" }}\n              stroke=\"#B6B8C0\"\n            />\n            <Tooltip />\n          </BarChart>\n        </ResponsiveContainer>\n      </div>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { projects } from \"./projects\";\nimport { Chart } from \"./components/Chart\";\nimport \"./App.css\";\n\nexport const App = () => {\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"#3D4875\" }}>\n      <div className=\"charts-body\">\n        <h2 className=\"dash-title\">NPM Downloads Dashboard</h2>\n        <Grid container spacing={2}>\n          {projects.map(project => {\n            return (\n              <Chart project={project} />\n            );\n          })}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}