{"version":3,"sources":["projects.js","helpers/getProjectData.js","helpers/downloadAgg.js","components/DownloadCSV.jsx","components/Chart.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["projects","getProjectData","project","startDate","endDate","a","axios","get","projectData","data","downloads","weeklyFromDaily","dailyData","weeklyData","currData","day","i","length","push","DownloadCSV","onClick","csv","forEach","row","console","log","hiddenElement","document","createElement","href","encodeURI","target","download","click","Chart","useState","setProjectData","useEffect","currentDate","Date","toISOString","slice","Grid","item","xs","className","LineChart","width","height","Line","type","dataKey","stroke","strokeWidth","dot","activeDot","r","XAxis","tick","fill","YAxis","Tooltip","App","style","backgroundColor","container","spacing","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4OAAaA,EAAW,CACvB,SACA,OACA,YACA,oBACA,cACA,UACA,UACA,kBACA,4BACA,wBACA,e,4DCTYC,EAAc,uCAAG,WAAOC,EAASC,EAAWC,GAA3B,eAAAC,EAAA,sEACHC,IAAMC,IAAN,gDAAmDJ,EAAnD,YAAgEC,EAAhE,YAA2EF,IADxE,cACvBM,EADuB,yBAEtBA,EAAYC,KAAKC,WAFK,2CAAH,0DCFdC,EAAkB,SAACC,GAM/B,IALA,IAAIC,EAAa,GACbC,EAAW,CACdJ,UAAW,EACXK,IAAKH,EAAU,GAAGG,KAEVC,EAAI,EAAGA,EAAIJ,EAAUK,OAAQD,IAC/BA,EAAI,GAAK,GACF,GAALA,IACFH,EAAWK,KAAKJ,GAChBA,EAAW,CACTJ,UAAW,EACXK,IAAKH,EAAUI,GAAGD,MAIxBD,EAASJ,WAAaE,EAAUI,GAAGN,UAGrC,OADAG,EAAWK,KAAKJ,GACTD,G,oDCnBIM,EAAc,SAACV,EAAMP,GAgBjC,OACC,wBAAQkB,QAhBgB,WACxB,IAAIC,EAAM,mBACVZ,EAAKA,KAAKa,SAAQ,SAACC,GAClBF,GAAO,CAACE,EAAIb,UAAWa,EAAIR,IAAK,KAChCM,GAAO,QAGNG,QAAQC,IAAIJ,GACd,IAAIK,EAAgBC,SAASC,cAAc,KAC3CF,EAAcG,KAAO,+BAAiCC,UAAUT,GAChEK,EAAcK,OAAS,SACvBL,EAAcM,SAAd,UAA4BvB,EAAKP,QAAjC,QACAwB,EAAcO,SAId,2BCRWC,EAAQ,SAAChC,GACpB,MAAsCiC,qBAAtC,mBAAO3B,EAAP,KAAoB4B,EAApB,KAWA,OATAC,qBAAU,WACR,sBAAC,gCAAAhC,EAAA,6DACKiC,GAAc,IAAIC,MAAOC,cAAcC,MAAM,EAAG,IADrD,SAEoBxC,EAAeC,EAAQA,QAAS,aAAcoC,GAFlE,OAEO7B,EAFP,OAGOI,EAAaF,EAAgBF,GACnC2B,EAAevB,GAJhB,0CAAD,KAMC,IAGD,cAAC6B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAf,SACE,sBAAKC,UAAU,QAAf,UACE,sBAAKA,UAAU,aAAf,UACE,oBAAIA,UAAU,QAAd,SAAuB3C,EAAQA,UAC/B,cAAC,EAAD,CAAaO,KAAMD,EAAaN,QAASA,EAAQA,aAEnD,eAAC4C,EAAA,EAAD,CACEC,MAAO,IACPC,OAAQ,IACRvC,KAAMD,EAHR,UAKE,cAACyC,EAAA,EAAD,CACEC,KAAK,WACLC,QAAQ,YACRC,OAAO,UACPC,YAAa,EACbC,KAAK,EACLC,UAAW,CAAEC,EAAG,KAElB,cAACC,EAAA,EAAD,CACEN,QAAQ,MACRO,KAAM,CAAEC,KAAM,WACdP,OAAO,YAET,cAACQ,EAAA,EAAD,CACEF,KAAM,CAAEC,KAAM,WACdP,OAAO,YAET,cAACS,EAAA,EAAD,aC7CGC,G,OAAM,WAEjB,OACE,qBAAKjB,UAAU,MAAMkB,MAAO,CAAEC,gBAAiB,WAA/C,SACE,sBAAKnB,UAAU,cAAf,UACE,oBAAIA,UAAU,aAAd,qCACA,cAACH,EAAA,EAAD,CAAMuB,WAAS,EAACC,QAAS,EAAzB,SACGlE,EAASmE,KAAI,SAAAjE,GACZ,OACE,cAAC,EAAD,CAAOA,QAASA,gBCFfkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpD,SAASqD,eAAe,SAM1BZ,M","file":"static/js/main.2a1dc983.chunk.js","sourcesContent":["export const projects = [\n\t\"ethers\",\n\t\"web3\",\n\t\"web3modal\",\n\t\"@openzeppelin/cli\",\n\t\"ganache-cli\",\n\t\"hardhat\",\n\t\"truffle\",\n\t\"@solana/web3.js\",\n\t\"@project-serum/anchor-cli\",\n\t\"@project-serum/anchor\",\n\t\"stellar-sdk\",\n];","import axios from \"axios\";\n\nexport const getProjectData = async (project, startDate, endDate) => {\n\tconst projectData = await axios.get(`https://api.npmjs.org/downloads/range/${startDate}:${endDate}/${project}`);\n\treturn projectData.data.downloads;\n}","export const weeklyFromDaily = (dailyData) => {\n\tlet weeklyData = [];\n\tlet currData = {\n\t\tdownloads: 0,\n\t\tday: dailyData[0].day,\n\t};\n\tfor (let i = 0; i < dailyData.length; i++) {\n    if (i % 7 == 0) {\n      if (i != 0) {\n        weeklyData.push(currData);\n        currData = {\n          downloads: 0,\n          day: dailyData[i].day,\n        };\n      }\n    }\n    currData.downloads += dailyData[i].downloads;\n\t}\n  weeklyData.push(currData);\n  return weeklyData;\n}","export const DownloadCSV = (data, project) => {\n\tconst downloadCSVClick = () => {\n\t\tvar csv = 'Downloads,Week\\n';\n\t\tdata.data.forEach((row) => {\n\t\t\tcsv += [row.downloads, row.day, ','];\n\t\t\tcsv += \"\\n\";\n\t\t});\n\n    console.log(csv);\n\t\tvar hiddenElement = document.createElement('a');\n\t\thiddenElement.href = 'data:text/csv;charset=utf-8,' + encodeURI(csv);\n\t\thiddenElement.target = \"_blank\";\n\t\thiddenElement.download = `${data.project}.csv`;\n\t\thiddenElement.click();\n\t}\n\n\treturn (\n\t\t<button onClick={downloadCSVClick}>Download CSV</button>\n\t);\n}\n","import { useEffect, useState } from \"react\";\nimport \"./chart.css\";\n\nimport { getProjectData } from \"../helpers/getProjectData\";\nimport { weeklyFromDaily } from \"../helpers/downloadAgg\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from \"recharts\";\nimport { Grid } from \"@material-ui/core\";\nimport { DownloadCSV } from \"./DownloadCSV\";\n\nexport const Chart = (project) => {\n  const [projectData, setProjectData] = useState();\n\n  useEffect(() => {\n    (async () => {\n      let currentDate = new Date().toISOString().slice(0, 10);\n      const data = await getProjectData(project.project, \"2014-01-01\", currentDate);\n      const weeklyData = weeklyFromDaily(data);\n      setProjectData(weeklyData);\n    })()\n  }, []);\n\n  return (\n    <Grid item xs={6}>\n      <div className=\"chart\">\n        <div className=\"chart-head\">\n          <h2 className=\"title\">{project.project}</h2>\n          <DownloadCSV data={projectData} project={project.project} />\n        </div>\n        <LineChart\n          width={500}\n          height={500}\n          data={projectData}\n        >\n          <Line\n            type=\"monotone\"\n            dataKey=\"downloads\"\n            stroke=\"#C49662\"\n            strokeWidth={3}\n            dot={false}\n            activeDot={{ r: 8 }}\n          />\n          <XAxis\n            dataKey=\"day\"\n            tick={{ fill: \"#B6B8C0\" }}\n            stroke=\"#B6B8C0\"\n          />\n          <YAxis\n            tick={{ fill: \"#B6B8C0\" }}\n            stroke=\"#B6B8C0\"\n          />\n          <Tooltip />\n        </LineChart>\n      </div>\n    </Grid>\n  );\n}\n","import { Grid } from \"@material-ui/core\";\nimport { projects } from \"./projects\";\nimport { Chart } from \"./components/Chart\";\nimport \"./App.css\";\n\nexport const App = () => {\n\n  return (\n    <div className=\"App\" style={{ backgroundColor: \"#3D4875\" }}>\n      <div className=\"charts-body\">\n        <h2 className=\"dash-title\">NPM Downloads Dashboard</h2>\n        <Grid container spacing={2}>\n          {projects.map(project => {\n            return (\n              <Chart project={project} />\n            );\n          })}\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}